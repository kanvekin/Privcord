name: Release
on:
    push:
        branches:
            - main

env:
    FORCE_COLOR: true
    GITHUB_TOKEN: ${{ secrets.ETOKEN }}
    GH_TOKEN: ${{ github.token }}
    REPO: kanvekin/Privbored
    USERNAME: GitHub-Actions

permissions:
    contents: write

jobs:
    Build:
        name: Build Privcord
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build web
              run: pnpm buildWebStandalone

            - name: Build
              run: pnpm buildStandalone

            - name: Generate plugin lists
              run: |
                pnpm generatePluginJson dist/plugins.json
                pnpm generateEquicordPluginJson dist/equicordplugins.json
                pnpm generatePrivcordPluginJson dist/privcordplugins.json
                pnpm generateVencordPluginJson dist/vencordplugins.json
                pnpm generateDevsList dist/devs.json

            - name: Collect files to be released
              run: |
                  cd dist
                  mkdir -p release

                  # Copy browser artifacts if present
                  { [ -d browser ] && compgen -G "browser/browser.*" > /dev/null && cp browser/browser.* release; } || true
                  # Copy userscript and its legal notice if present
                  [ -f Vencord.user.js ] && cp Vencord.user.js release || true
                  [ -f Vencord.user.js.LEGAL.txt ] && cp Vencord.user.js.LEGAL.txt release || true

                  # Copy plugin data JSONs, extension zips and desktop/vesktop ASARs if present
                  cp *.{json,zip,asar} release

                  # Legacy un-asared files
                  { [ -d desktop ] && compgen -G "desktop/*" > /dev/null && cp desktop/* release; } || true
                  { [ -d privcord ] && compgen -G "privcord/*" > /dev/null && cp privcord/* release; } || true
                  { [ -d equibop ] && compgen -G "equibop/*" > /dev/null && for file in equibop/*; do
                    filename=$(basename "$file")
                    cp "$file" "release/equibop${filename^}"
                  done; } || true

                  find release -size 0 -delete
                  rm -f release/package.json
                  rm -f release/*.map

            - name: Upload Privcord Stable
              run: |
                  gh release upload latest --clobber dist/release/*

            - name: Upload Plugin JSONs to Privbored repo
              run: |
                  git config --global user.name "GitHub-Actions"
                  git config --global user.email actions@github.com
                  git clone https://$USERNAME:$GITHUB_TOKEN@github.com/$REPO.git plugins
                  cd plugins

                  cp ../dist/*plugins.json .
                  git add -A

                  git commit -m "Plugins for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                  git push --force https://$USERNAME:$GITHUB_TOKEN@github.com/$REPO.git
